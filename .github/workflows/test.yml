name: Test

on:
  push:
    paths:
      - '.github/workflows/test.yml'
      - '**/*.swift'
  pull_request:
    paths:
      - '.github/workflows/test.yml'
      - '**/*.swift'

jobs:
  swift-test:
    strategy:
      fail-fast: true
      matrix:
        operating-system: ['macos-12', 'macos-13', 'macos-14', 'ubuntu-20.04', 'ubuntu-22.04']
        swift-version: ['5.3.3', '5.4.3', '5.5.3', '5.6.3', '5.7.3', '5.8.1', '5.9.2', '5.10.1']
        include:
          - operating-system: 'ubuntu-24.04'
            swift-version: '5.10.1'
        exclude:
          - operating-system: 'ubuntu-22.04'
            swift-version: '5.3.3'
          - operating-system: 'ubuntu-22.04'
            swift-version: '5.4.3'
          - operating-system: 'ubuntu-22.04'
            swift-version: '5.5.3'
    runs-on: ${{ matrix.operating-system }}
    continue-on-error: ${{ matrix.experimental == 'experimental' }}
    steps:
      - uses: actions/checkout@v4
      - uses: swift-actions/setup-swift@v2
        with:
          swift-version: ${{ matrix.swift-version }}
      - name: Package resolve
        run: swift package resolve
      - name: Build
        run: |
          if [ -z "$RUNNER_DEBUG" ]; then
            swift build
          else
            swift build -v
          fi
      - name: Run tests
        run: |
          if [ -z "$RUNNER_DEBUG" ]; then
            swift test
          else
            swift test -v
          fi
  xcode-test:
    strategy:
      fail-fast: true
      matrix:
        xcode-version: ["12.5.1", "13.2.1", "13.4.1"]
        xcode-destination: [
          "platform=OS X,arch=x86_64",
          "platform=OS X,arch=x86_64,variant=Mac Catalyst",
          "platform=iOS Simulator,name=iPhone 12 Pro,OS=latest",
          "platform=tvOS Simulator,name=Apple TV,OS=latest",
          "platform=watchOS Simulator,name=Apple Watch Series 6 - 44mm,OS=latest",
        ]
        include:
          - xcode-version: "12.5.1"
            operating-system: "macos-11"
          - xcode-version: "13.2.1"
            operating-system: "macos-11"
          - xcode-version: "13.4.1"
            operating-system: "macos-12"
    runs-on: ${{ matrix.operating-system }}
    steps:
      - uses: actions/checkout@v3
      - uses: sinoru/actions-setup-xcode@v2
        with:
          xcode-version: ${{ matrix.xcode-version }}
          apple-id: ${{ secrets.APPLE_ID }}
          apple-id-password: ${{ secrets.APPLE_ID_PASSWORD }}
      - name: Resolve Package Dependencies
        run: xcodebuild -resolvePackageDependencies
      - name: Analyze
        run: xcodebuild -scheme swift-snowflake-Package -destination '${{ matrix.xcode-destination }}' analyze
      - name: Test
        run: xcodebuild -scheme swift-snowflake-Package -destination '${{ matrix.xcode-destination }}' test
